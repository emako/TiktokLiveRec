<ui:FluentWindow x:Class="TiktokLiveRec.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:b="http://schemas.github.com/computedbehaviors/2024/xaml"
                 xmlns:c="http://schemas.github.com/computedconverters/2024/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:local="clr-namespace:TiktokLiveRec"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:vio="http://schemas.lepo.co/wpfui/2022/xaml/violeta"
                 Title="TiktokLiveRec"
                 Width="800"
                 Height="600"
                 d:Background="#FF101010"
                 ExtendsContentIntoTitleBar="True"
                 WindowBackdropType="Mica"
                 WindowStartupLocation="CenterScreen"
                 mc:Ignorable="d">
    <Grid>
        <ui:Grid Margin="8,42,8,8" RowDefinitions="Auto,*">
            <ui:Grid Grid.Row="0">
                <ui:StackPanel Orientation="Horizontal" Spacing="8">
                    <Button MinWidth="80" Command="{Binding AddRoomCommand}">
                        <Button.Content>
                            <ui:StackPanel Orientation="Horizontal" Spacing="8">
                                <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.Add}" />
                                <TextBlock Text="添加" />
                            </ui:StackPanel>
                        </Button.Content>
                    </Button>
                    <Button MinWidth="80" Command="{Binding OpenSettingsDialogCommand}">
                        <Button.Content>
                            <ui:StackPanel Orientation="Horizontal" Spacing="8">
                                <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.Settings}" />
                                <TextBlock Text="设置" />
                            </ui:StackPanel>
                        </Button.Content>
                    </Button>
                </ui:StackPanel>
                <ui:StackPanel HorizontalAlignment="Right"
                               Orientation="Horizontal"
                               Spacing="8">
                    <Button MinWidth="80" Command="{Binding OpenSaveFolderCommand}">
                        <Button.Content>
                            <ui:StackPanel Orientation="Horizontal" Spacing="8">
                                <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.FolderOpen}" />
                                <TextBlock Text="保存目录" />
                            </ui:StackPanel>
                        </Button.Content>
                    </Button>
                </ui:StackPanel>
            </ui:Grid>
            <DataGrid Grid.Row="1"
                      Margin="0,8,0,0"
                      AutoGenerateColumns="False"
                      Background="Transparent"
                      CanUserAddRows="False"
                      CanUserSortColumns="False"
                      ColumnHeaderHeight="50"
                      ColumnWidth="100"
                      DataGrid.CellStyle="{StaticResource CenteredDataGridCellStyle}"
                      DataGrid.ColumnHeaderStyle="{StaticResource CenteredDataGridColumnHeaderStyle}"
                      EnableColumnVirtualization="False"
                      EnableRowVirtualization="False"
                      IsReadOnly="True"
                      ItemsSource="{Binding Recs}"
                      Loaded="{c:EventBinding DataGridLoadedCommand}"
                      RowHeight="40"
                      SelectionMode="Single"
                      SelectionUnit="FullRow">
                <DataGrid.ContextMenu>
                    <ContextMenu Loaded="{c:EventBinding ContextMenuLoadedCommand}">
                        <MenuItem Header="{Binding SelectedItem.NickName}" IsEnabled="False" />
                        <MenuItem Command="{Binding GotoRoomUrlCommand}" Header="进入直播间">
                            <MenuItem.Icon>
                                <ui:FontIcon Margin="2,0,2,0"
                                             FontFamily="{StaticResource SymbolThemeFontFamily}"
                                             FontSize="16"
                                             Glyph="{x:Static ui:FontSymbols.OpenInNewWindow}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding StopRecordCommand}" Header="保存目录">
                            <MenuItem.Icon>
                                <ui:FontIcon Margin="2,0,2,0"
                                             FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                             FontSize="16"
                                             Glyph="{x:Static ui:FontSymbols.FolderOpen}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding PlayRecordCommand}" Header="播放录制">
                            <MenuItem.Icon>
                                <ui:FontIcon Margin="2,0,2,0"
                                             FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                             FontSize="16"
                                             Glyph="{x:Static ui:FontSymbols.Play}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding StopRecordCommand}" Header="停止录制">
                            <MenuItem.Icon>
                                <ui:FontIcon Margin="2,0,2,0"
                                             FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                             FontSize="16"
                                             Glyph="{x:Static ui:FontSymbols.Stop}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding StopRecordCommand}" Header="录制日志">
                            <MenuItem.Icon>
                                <ui:FontIcon Margin="2,0,2,0"
                                             FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                             FontSize="16"
                                             Glyph="{x:Static ui:FontSymbols.List}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="单独设置" IsEnabled="False" />
                        <MenuItem Command="{Binding GotoRoomUrlCommand}"
                                  Header="开播通知"
                                  IsCheckable="True"
                                  IsChecked="{Binding IsToNotify, Mode=TwoWay}"
                                  ToolTip="指示是否在检测到开播后进行系统通知" />
                        <MenuItem Command="{Binding GotoRoomUrlCommand}"
                                  Header="启用录制"
                                  IsCheckable="True"
                                  IsChecked="{Binding IsToRecord, Mode=TwoWay}"
                                  ToolTip="指示是否启用直播录制" />
                        <Separator />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="*"
                                        Binding="{Binding NickName}"
                                        CellStyle="{StaticResource CenteredDataGridTextColumnCellStyle}"
                                        EditingElementStyle="{StaticResource CenteredDataGridTextColumnEditingElementStyle}"
                                        ElementStyle="{StaticResource CenteredDataGridTextColumnElementStyle}"
                                        Header="直播间"
                                        IsReadOnly="True" />
                    <DataGridTextColumn Width="*"
                                        Binding="{Binding StreamStatusText}"
                                        CellStyle="{StaticResource CenteredDataGridTextColumnCellStyle}"
                                        EditingElementStyle="{StaticResource CenteredDataGridTextColumnEditingElementStyle}"
                                        ElementStyle="{StaticResource CenteredDataGridTextColumnElementStyle}"
                                        Header="直播状态"
                                        IsReadOnly="True" />
                    <DataGridTextColumn Width="*"
                                        Binding="{Binding RecordStatusText}"
                                        CellStyle="{StaticResource CenteredDataGridTextColumnCellStyle}"
                                        EditingElementStyle="{StaticResource CenteredDataGridTextColumnEditingElementStyle}"
                                        ElementStyle="{StaticResource CenteredDataGridTextColumnElementStyle}"
                                        Header="录制状态"
                                        IsReadOnly="True" />
                    <!--<DataGridTemplateColumn Width="3*" Header="操作">
                        <DataGridTemplateColumn.CellStyle>
                            <Style BasedOn="{StaticResource DefaultDataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <ui:StackPanel HorizontalAlignment="Center"
                                                           Orientation="Horizontal"
                                                           Spacing="8">
                                                <Button Command="{Binding PlayRecordCommand}"
                                                        Tag="{Binding}"
                                                        ToolTip="播放直播">
                                                    <Button.Content>
                                                        <ui:StackPanel Orientation="Horizontal" Spacing="4">
                                                            <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.Play}" />
                                                            <TextBlock Text="播放" />
                                                        </ui:StackPanel>
                                                    </Button.Content>
                                                </Button>
                                                <Button Command="{Binding GotoCommand}"
                                                        Tag="{Binding}"
                                                        ToolTip="前往直播间">
                                                    <Button.Content>
                                                        <ui:StackPanel Orientation="Horizontal" Spacing="4">
                                                            <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.OpenInNewWindow}" />
                                                            <TextBlock Text="前往" />
                                                        </ui:StackPanel>
                                                    </Button.Content>
                                                </Button>
                                            </ui:StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>-->
                </DataGrid.Columns>
            </DataGrid>
        </ui:Grid>
        <Grid>
            <ui:TitleBar Title="TiktokLiveRec" ShowMaximize="False">
                <ui:TitleBar.Icon>
                    <ui:ImageIcon Source="pack://application:,,,/Assets/Favicon.png" />
                </ui:TitleBar.Icon>
                <ui:TitleBar.Header>
                    <ui:Button Width="44"
                               Height="30"
                               Margin="0,-16,0,0"
                               Background="Transparent"
                               BorderBrush="Transparent"
                               CornerRadius="0"
                               Icon="{ui:SymbolIcon CaretDown16}">
                        <ui:Button.ContextMenu>
                            <ContextMenu FontSize="12">
                                <MenuItem Command="{Binding OpenSettingsFileFolderCommand}" Header="保存目录">
                                    <MenuItem.Icon>
                                        <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.FolderOpen}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding OpenSettingsFileFolderCommand}" Header="配置文件">
                                    <MenuItem.Icon>
                                        <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="{x:Static ui:FontSymbols.OpenLocal}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="主题">
                                    <MenuItem.Resources>
                                        <vio:MenuItemGroup x:Key="MenuItemGroupOfTheme" />
                                    </MenuItem.Resources>
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon FontSize="16" Symbol="Color16" />
                                    </MenuItem.Icon>
                                    <MenuItem vio:MenuItemGroup.Group="{StaticResource MenuItemGroupOfTheme}"
                                              Header="跟随系统"
                                              IsCheckable="True"
                                              IsChecked="{Binding IsThemeAuto}">
                                        <MenuItem.Icon>
                                            <Control Width="2" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem vio:MenuItemGroup.Group="{StaticResource MenuItemGroupOfTheme}"
                                              Header="浅色主题"
                                              IsCheckable="True"
                                              IsChecked="{Binding IsThemeLight}">
                                        <MenuItem.Icon>
                                            <Control Width="2" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem vio:MenuItemGroup.Group="{StaticResource MenuItemGroupOfTheme}"
                                              Header="深色主题"
                                              IsCheckable="True"
                                              IsChecked="{Binding IsThemeDark}">
                                        <MenuItem.Icon>
                                            <Control Width="2" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding OpenAboutCommand}" Header="关于">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon FontSize="16" Symbol="Info16" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ui:Button.ContextMenu>
                        <i:Interaction.Behaviors>
                            <b:LeftContextMenuBehavior />
                        </i:Interaction.Behaviors>
                    </ui:Button>
                </ui:TitleBar.Header>
            </ui:TitleBar>
        </Grid>
    </Grid>
</ui:FluentWindow>
